{"version":3,"sources":["redux/types.js","redux/terminalReducer.js","redux/appReducer.js","redux/Reducer.js","redux/store.js","Terminal/Header.jsx","redux/actions.js","Terminal/Content.jsx","Terminal/Terminal.jsx","menu.jsx","App.js","index.js"],"names":["ADD_TO_HISTORY","initialState","commandList","history","comands","currentComand","prevComand","theme","font","color","Reducer","combineReducers","terminal","state","action","type","payload","app","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","Header","useSelector","className","icon","faCircle","faTimesCircle","faMinusCircle","faPlusCircle","addToHistory","item","dispatch","a","fetch","response","ok","json","answer","console","error","addCurrentComand","addPrevComand","setTheme","setColor","setFont","connect","useDispatch","useEffect","refInput","React","createRef","handleKeyDown","key","target","value","length","onClick","current","focus","map","index","onKeyDown","e","ref","style","onChange","Terminal","JSON","parse","localStorage","getItem","setItem","stringify","Menu","trim","split","join","htmlFor","name","id","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bfc24f7.chunk.js","sourcesContent":["export const ADD_TO_HISTORY = \"TERMINAL/ADD_TO_HISTORY\";\nexport const REMOVE_FROM_HISTORY = \"TERMINAL/REMOVE_FROM_HISTORY\";\n\nexport const ADD_CURRENT_COMAND = \"TERMINAL/ADD_CURRENT_COMAND\";\nexport const REMOVE_CURRENT_COMAND = \"TERMINAL/REMOVE_CURRENT_COMAND\";\n\nexport const ADD_COMAND = \"TERMINAL/ADD_COMAND\";\n\nexport const ADD_PREV_COMAND = \"TERMINAL/ADD_PREV_COMAND\";\n\nexport const SET_COMMANDS = \"TERMINAL/SET_COMMANDS\";\n\nexport const SET_THEME = \"APP/SET_THEME\";\n\nexport const SET_COLOR = \"APP/SET_COLOR\";\n\nexport const SET_FONT = \"APP/SET_FONT\";\n","import {\n  ADD_TO_HISTORY,\n  REMOVE_FROM_HISTORY,\n  ADD_CURRENT_COMAND,\n  REMOVE_CURRENT_COMAND,\n  ADD_COMAND,\n  ADD_PREV_COMAND,\n  SET_COMMANDS,\n} from \"./types\";\n\nconst initialState = {\n  commandList: [],\n  history: [],\n  comands: [],\n  currentComand: \"\",\n  prevComand: 0,\n};\n\nexport function terminalReducer(state = initialState, action) {\n  switch (action.type) {\n    case ADD_TO_HISTORY: {\n      return { ...state, history: [...state.history, action.payload] };\n    }\n\n    case REMOVE_FROM_HISTORY: {\n      return { ...state, history: [] };\n    }\n\n    case ADD_CURRENT_COMAND: {\n      return { ...state, currentComand: action.payload };\n    }\n\n    case REMOVE_CURRENT_COMAND: {\n      return { ...state, currentComand: \"\" };\n    }\n\n    case ADD_COMAND: {\n      return { ...state, comands: [...state.comands, action.payload] };\n    }\n\n    case ADD_PREV_COMAND: {\n      return { ...state, prevComand: action.payload };\n    }\n\n    case SET_COMMANDS: {\n      return { ...state, commandList: action.payload };\n    }\n\n    default:\n      return state;\n  }\n}\n","import { SET_COLOR, SET_THEME, SET_FONT } from \"./types\";\n\nconst initialState = {\n  theme: \"ubuntu\",\n  font: \"courier\",\n  color: \"#aaaaaa\",\n};\n\nexport const appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_COLOR: {\n      return { ...state, color: action.payload };\n    }\n    case SET_THEME: {\n      return { ...state, theme: action.payload };\n    }\n    case SET_FONT: {\n      return { ...state, font: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { terminalReducer } from \"./terminalReducer\";\nimport { appReducer } from \"./appReducer\";\n\nexport const Reducer = combineReducers({\n  terminal: terminalReducer,\n  app: appReducer,\n});\n","import { createStore, compose, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { Reducer } from \"./Reducer\";\n\nexport const store = createStore(\n  Reducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faTimesCircle,\n  faMinusCircle,\n  faPlusCircle,\n  faCircle,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nexport const Header = () => {\n  const theme = useSelector((state) => state.app.theme);\n\n  return (\n    <div className=\"terminal--header\">\n      <div className=\"buttons\">\n        <span>\n          <FontAwesomeIcon\n            icon={theme === \"osX\" ? faCircle : faTimesCircle}\n            color={theme === \"osX\" ? \"#F25056\" : \"#D75224\"}\n          />\n        </span>\n        <span>\n          <FontAwesomeIcon\n            icon={theme === \"osX\" ? faCircle : faMinusCircle}\n            color={theme === \"osX\" ? \"#FAC536\" : \"#555555\"}\n          />\n        </span>\n        <span>\n          <FontAwesomeIcon\n            icon={theme === \"osX\" ? faCircle : faPlusCircle}\n            color={theme === \"osX\" ? \"#39EA49\" : \"#555555\"}\n          />\n        </span>\n      </div>\n      <div className=\"title\">user@host:/$</div>\n    </div>\n  );\n};\n","import {\n  ADD_TO_HISTORY,\n  REMOVE_FROM_HISTORY,\n  ADD_CURRENT_COMAND,\n  REMOVE_CURRENT_COMAND,\n  ADD_COMAND,\n  ADD_PREV_COMAND,\n  SET_COMMANDS,\n  SET_THEME,\n  SET_FONT,\n  SET_COLOR,\n} from \"./types\";\n\nexport function addToHistory(item) {\n  return async (dispatch) => {\n    try {\n      const response = await fetch(\n        `https://my-json-server.typicode.com/gunkaartur/web-terminal/${item}`\n      );\n      if (!response.ok) {\n        dispatch({ type: ADD_TO_HISTORY, payload: item });\n        dispatch({\n          type: ADD_TO_HISTORY,\n          payload: `${item}: command not found `,\n        });\n        return;\n      }\n      const json = await response.json();\n      dispatch({ type: ADD_TO_HISTORY, payload: item });\n      dispatch({ type: ADD_TO_HISTORY, payload: json.answer });\n    } catch (e) {\n      console.error(e);\n    }\n  };\n}\nexport function clearHistory() {\n  return {\n    type: REMOVE_FROM_HISTORY,\n  };\n}\n\nexport function addCurrentComand(item) {\n  return {\n    type: ADD_CURRENT_COMAND,\n    payload: item,\n  };\n}\nexport function removeCurrentComand() {\n  return {\n    type: REMOVE_CURRENT_COMAND,\n  };\n}\nexport function addComand(item) {\n  return {\n    type: ADD_COMAND,\n    payload: item,\n  };\n}\nexport function addPrevComand(item) {\n  return {\n    type: ADD_PREV_COMAND,\n    payload: item,\n  };\n}\nexport function setCommands() {\n  return async (dispatch) => {\n    const response = await fetch(\n      \"https://my-json-server.typicode.com/gunkaartur/web-terminal/commands\"\n    );\n    const json = await response.json();\n    dispatch({ type: SET_COMMANDS, payload: json });\n  };\n}\n\nexport function setTheme(item) {\n  return {\n    type: SET_THEME,\n    payload: item,\n  };\n}\n\nexport function setColor(item) {\n  return {\n    type: SET_COLOR,\n    payload: item,\n  };\n}\n\nexport function setFont(item) {\n  return {\n    type: SET_FONT,\n    payload: item,\n  };\n}\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { connect } from \"react-redux\";\nimport {\n  addToHistory,\n  clearHistory,\n  addCurrentComand,\n  removeCurrentComand,\n  addComand,\n  addPrevComand,\n  setCommands,\n} from \"../redux/actions\";\n\nconst Content = ({ history, comands, currentComand, prevComand, color }) => {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(setCommands());\n  }, [dispatch]);\n\n  const refInput = React.createRef();\n\n  const handleKeyDown = async ({ key, target }) => {\n    switch (key) {\n      case \"Enter\": {\n        target.value && dispatch(addComand(target.value));\n\n        target.value === \"clear\"\n          ? dispatch(clearHistory())\n          : dispatch(addToHistory(currentComand));\n\n        dispatch(removeCurrentComand());\n        dispatch(addPrevComand(comands.length + 1));\n        return;\n      }\n      case \"ArrowUp\": {\n        if (prevComand === 0) return;\n        else {\n          dispatch(addCurrentComand(comands[prevComand - 1]));\n          prevComand !== 0 && dispatch(addPrevComand(prevComand - 1));\n        }\n        return;\n      }\n      case \"ArrowDown\": {\n        if (prevComand === comands.length || prevComand === comands.length - 1)\n          return;\n        else {\n          dispatch(addCurrentComand(comands[prevComand + 1]));\n          prevComand < comands.length &&\n            dispatch(addPrevComand(prevComand + 1));\n        }\n        return;\n      }\n      default:\n        return;\n    }\n  };\n\n  const handleFocus = () => {\n    refInput.current.focus();\n  };\n\n  return (\n    <div className=\"terminal--content\" onClick={handleFocus}>\n      <ul className=\"terminal--history\">\n        {history.map((item, index) => (\n          <li key={index}>{item}</li>\n        ))}\n      </ul>\n      <span>user@host:/$ </span>\n\n      <input\n        className=\"terminal--input\"\n        type=\"text\"\n        onKeyDown={(e) => handleKeyDown(e)}\n        value={currentComand}\n        ref={refInput}\n        style={{ color: color }}\n        onChange={(e) => dispatch(addCurrentComand(e.target.value))}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ terminal, app }) => {\n  return {\n    history: terminal.history,\n    comands: terminal.comands,\n    currentComand: terminal.currentComand,\n    prevComand: terminal.prevComand,\n    color: app.color,\n  };\n};\n\nexport default connect(mapStateToProps, null)(Content);\n","import React, { useEffect } from \"react\";\nimport { Header } from \"./Header\";\nimport Content from \"./Content\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { setColor, setFont, setTheme } from \"../redux/actions\";\n\nexport const Terminal = () => {\n  const app = useSelector((state) => state.app);\n  const { font, color, theme } = app;\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const app = JSON.parse(localStorage.getItem(\"app\"));\n\n    app.color && dispatch(setColor(app.color));\n    app.theme && dispatch(setTheme(app.theme));\n    app.font && dispatch(setFont(app.font));\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(\"app\", JSON.stringify(app));\n  }, [app]);\n\n  return (\n    <div\n      className={`terminal terminal--${font} terminal--${theme}`}\n      style={{ color: color }}\n    >\n      <Header />\n      <Content />\n    </div>\n  );\n};\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setTheme, setColor, setFont } from \"./redux/actions\";\n\nexport const Menu = () => {\n  const dispatch = useDispatch();\n  const color = useSelector((state) => state.app.color);\n  const theme = useSelector((state) => state.app.theme);\n  const font = useSelector((state) => state.app.font)\n    .trim()\n    .split(\" \")\n    .join(\"-\");\n\n  return (\n    <div className=\"menu\">\n      <label htmlFor=\"theme\">Choose a theme:</label>\n\n      <select\n        onChange={(e) => dispatch(setTheme(e.target.value))}\n        name=\"theme\"\n        id=\"theme\"\n        value={theme}\n      >\n        <option value=\"ubuntu\">ubuntu</option>\n        <option value=\"osX\">osX</option>\n      </select>\n\n      <label htmlFor=\"font\">Choose font:</label>\n\n      <select\n        onChange={(e) => dispatch(setFont(e.target.value))}\n        name=\"font\"\n        id=\"font\"\n        value={font}\n      >\n        <option value=\"courier\">Courier New</option>\n        <option value=\"arial\">Arial</option>\n      </select>\n\n      <label htmlFor=\"color\">Choose color:</label>\n      <input\n        value={color}\n        name=\"color\"\n        onChange={(e) => dispatch(setColor(e.target.value))}\n        type=\"color\"\n      />\n    </div>\n  );\n};\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Terminal } from \"./Terminal/Terminal\";\nimport { Menu } from \"./menu\";\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <Menu />\n      <Terminal />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./redux/store\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}